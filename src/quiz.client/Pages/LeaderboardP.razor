@page "/Leaderboard"
@inject ILeaderboardService LeaderboardService

<div class="container page-centered">
<h3> Leaderboard </h3>

<AuthorizeView>
        <Authorized>
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Nickname</th>
                <th scope="col">Punti</th>
                <th scope="col">Partite giocate</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in listUsers)
            {
                if(!user.Username.Contains("admin"))
                {
                    i++;
                    <tr>
                        <th scope="row">@i</th>
                        <td>@user.Username</td>
                        <td>@user.Points</td>
                        <td>@user.GamePlayed</td>
                    </tr>
                }             
            }
        </tbody>
    </table>
</div>

</Authorized>
        <NotAuthorized>
                <div class="row">
                <div class="col">
                    <h5>Questa pagina Ã¨ disponibile solo per gli utenti registrati <br />
                    Esegui il login oppure registrati come nuovo utente</h5>
                    <a class="btn btn-success" href="login" role="button">Login</a>
                    <a class="btn btn-success" href="register" role="button">Registrati</a>

                </div>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>
@code {

    int i = 0;
    List<Leaderboard> listUsers = new List<Leaderboard>();

    protected override async Task OnInitializedAsync()
    {  
        listUsers = await LeaderboardService.GetAllPoints();
    }
}