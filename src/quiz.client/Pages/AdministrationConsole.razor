@page "/Administration"
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IQuestionService QuestionService
@inject NavigationManager NavigationManager

<div class="container page-centered">
<AuthorizeView Roles="Admin">
    <Authorized>
        <div class="row">
            <div class="col">
                <h1>Pannello di gestione Quiz</h1>
            </div>  
        </div>
        <div class="row">
            <div class="col">
                <a class="btn btn-primary btn-lg btn-block" href="#" @onclick="@(e => CheckIfQuestionExist(e))" role="button">Carica nuove domande</a>
            </div>  
            <div class="col">
                <a class="btn btn-primary btn-lg btn-block" href="delete" role="button">Termina il quiz</a>
            </div>
        </div>         
    </Authorized>
   <NotAuthorized>
        <div class="row">
            <div class="col rounded-borders">
                Questi contenuti sono disponibili solo per gli amministratori del quiz 
            </div>
        </div>
   </NotAuthorized>
</AuthorizeView>
</div>


@code
{
    public async void CheckIfQuestionExist(MouseEventArgs e)
    {
        var list = await QuestionService.GetQuestions();
        if( list.Count > 0)
        {
            NavigationManager.NavigateTo("/delete", true);
        }
        else
        {
            NavigationManager.NavigateTo("/upload", true);
        }
    }
}